{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModalCard/TodoModalCard.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TypeCurTodo","actions","todo","type","Set","payload","Remove","currentTodoReducer","state","arguments","length","undefined","action","statusType","search","filterReducer","query","status","_objectSpread","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","filterQuery","filterStatus","filteredTodos","queryTodo","optionQuery","filterCondition","value","toLowerCase","includes","completed","title","filterTodo","_jsxs","className","children","_jsx","map","id","onClick","TodoFilter","onChange","event","target","filterAction","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModalCard","_ref","user","closeModalTodo","concat","href","email","name","TodoModal","_useState","useState","_useState2","_slicedToArray","setUser","useEffect","userId","App","result","todosAction","_Fragment","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1d80fa8.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\nenum TypeCurTodo {\n  Remove = 'currentTodo/REMOVE',\n  Set = 'currentTodo/SET',\n}\n\ntype RemoveTodoAction = { type: TypeCurTodo.Remove };\ntype SetTodoAction = {\n  type: TypeCurTodo.Set;\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: TypeCurTodo.Remove });\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: TypeCurTodo.Set,\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case TypeCurTodo.Remove:\n      return null;\n    case TypeCurTodo.Set:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetStatusAction = { type: 'STATUS/SET', payload: Status };\ntype SetQueryAction = { type: 'QUERY/SET', payload: string };\n\nconst setStatus = (statusType: Status):SetStatusAction => {\n  return { type: 'STATUS/SET', payload: statusType };\n};\n\nconst setQuery = (search: string):SetQueryAction => {\n  return { type: 'QUERY/SET', payload: search };\n};\n\ntype State = { query: string, status: string };\ntype Action = SetStatusAction | SetQueryAction;\n\nexport const actions = { setStatus, setQuery };\n\nconst filterReducer = (\n  state: State = { query: '', status: 'all' },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'STATUS/SET':\n      return { ...state, status: action.payload };\n    case 'QUERY/SET':\n      return { ...state, query: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype TodosAction = { type: 'TODOS/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo []):TodosAction => {\n  return { type: 'TODOS/SET', payload: todos };\n};\n\ntype State = Todo[] | [];\ntype Action = TodosAction;\n\nexport const actions = { setTodos };\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'TODOS/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoList = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const todos = useAppSelector(state => state.todos);\n  const filterQuery = useAppSelector(state => state.filter.query);\n  const filterStatus = useAppSelector(state => state.filter.status);\n\n  const cahngedSelectTodo = (value: Todo) => {\n    dispatch(actions.setTodo(value));\n  };\n\n  const filterTodo = (queryTodo: string, optionQuery: string) => {\n    const filterCondition = (value: string) => {\n      return value.toLowerCase().includes(queryTodo.toLowerCase());\n    };\n\n    switch (optionQuery) {\n      case 'active':\n        return todos.filter(todo => !todo.completed\n          && filterCondition(todo.title));\n\n      case 'completed':\n        return todos.filter(todo => todo.completed\n          && filterCondition(todo.title));\n\n      default:\n        if (filterQuery.length > 0) {\n          return todos.filter(todo => filterCondition(todo.title));\n        }\n\n        return todos;\n    }\n  };\n\n  const filteredTodos = filterTodo(filterQuery, filterStatus);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => cahngedSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={currentTodo === todo\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\nimport { actions as filterAction } from '../../features/filter';\n\nexport const TodoFilter = () => {\n  const dispatch = useAppDispatch();\n  const filterQuery = useAppSelector(state => state.filter.query);\n\n  const changeQuery = (value: string) => {\n    dispatch(filterAction.setQuery(value));\n  };\n\n  const changeOption = (value: Status) => {\n    dispatch(filterAction.setStatus(value));\n  };\n\n  const clearQuery = () => {\n    dispatch(filterAction.setQuery(''));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => changeOption(event.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterQuery}\n          onChange={event => changeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {filterQuery && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo | null,\n  user: User,\n  closeModalTodo: () => void,\n};\n\nexport const TodoModalCard: React.FC<Props> = ({\n  todo,\n  user,\n  closeModalTodo,\n}) => {\n  return (\n    <div className=\"modal-card\">\n      <header className=\"modal-card-head\">\n        <div\n          className=\"modal-card-title has-text-weight-medium\"\n          data-cy=\"modal-header\"\n        >\n          {`Todo #${todo?.id}`}\n        </div>\n\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          type=\"button\"\n          className=\"delete\"\n          data-cy=\"modal-close\"\n          onClick={closeModalTodo}\n        />\n      </header>\n\n      <div className=\"modal-card-body\">\n        <p className=\"block\" data-cy=\"modal-title\">\n          {todo?.title}\n        </p>\n\n        <p className=\"block\" data-cy=\"modal-user\">\n          { todo?.completed\n            ? <strong className=\"has-text-success\">Done</strong>\n            : <strong className=\"has-text-danger\">Planned</strong>}\n\n          <a href={`mailto:${user.email}`}>\n            {` by ${user.name}`}\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { TodoModalCard } from '../TodoModalCard/TodoModalCard';\n\nexport const TodoModal = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n  const todo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    if (todo !== null) {\n      getUser(todo.userId).then((res) => {\n        setUser(res);\n      });\n    }\n  }, []);\n\n  const closeModalTodo = () => {\n    dispatch(actions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user\n        ? (\n          <TodoModalCard\n            todo={todo}\n            user={user}\n            closeModalTodo={closeModalTodo}\n          />\n        )\n        : <Loader />}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { actions as todosAction } from './features/todos';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const todos = useAppSelector(state => state.todos);\n\n  useEffect(() => {\n    getTodos().then((result) => {\n      dispatch(todosAction.setTodos(result));\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? <TodoList />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}